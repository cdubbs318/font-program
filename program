
/*
 * Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   - Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *
 *   - Neither the name of Oracle or the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
 
/* ColorChooserDemo.java requires no other files. */
public class ColorChooserDemo extends JPanel
                              implements ChangeListener, ActionListener {
 
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	protected JColorChooser textcolor;
	protected JColorChooser bgcolor;
    protected JLabel banner;
    protected JComboBox fontfamily;
 
    public ColorChooserDemo() {
        super(new BorderLayout());
        
        //Set up the banner at the top of the window
        
        String text= "The quick brown fox jumped over the lazy dog’s back." + "<br>"
        		+ "Pack my box with five dozen liquor jugs." + "<br>"
        		+ "Jackdaws love my big sphinx of quartz." + "<br>"
        		+ "Mr. Jock, TV quiz PhD, bags few lynx." + "<br>"
        		+ "abcdefghijklmnopqrstuvwxyz" + "<br>"
        		+ "ABCDEFGHIJKLMNOPQRSTUVWXYZ" + "<br>"
        		+ "01234567890" + "<br>"
        		+ "€†™´¸¢©¤°÷½¼¾>¡¿«‘’<¯µ ·¬ªº¶±£\"»®§­¹²³ß×™¨¥" +"<br>"
        		+ "ÀÁÂÃÄÅÆÇÈÉ ÊËÌÍÎÏÐÑÒÓÔ ÕÖØÙÚÛÜÝÞÿ" + "<br>"
        		+ "àáâãäåæçèé êëìíîïðñòóô õöøùúûüýþÿ" + "<br>"
        		+ "!\"#$%&\'()*+,-./:;<=>?@[\\^_z{|}~" + "<br>"
        		+ "uvw wW gq9 2z 5s il17|!j oO08 `\'\" ;:,. m nn rn {[()]}u";
        
        banner = new JLabel("<html>" + text + "</html>",
                            JLabel.CENTER);
        banner.setForeground(Color.yellow);
        banner.setBackground(Color.orange);
        banner.setOpaque(true);
        banner.setFont(new Font("Abadi MT Condensed Extra Bold", Font.BOLD, 24));
        banner.setPreferredSize(new Dimension(100, 400));
 
        JPanel bannerPanel = new JPanel(new BorderLayout());
        bannerPanel.add(banner, BorderLayout.PAGE_START);
        bannerPanel.setBorder(BorderFactory.createTitledBorder("Banner"));
 
        //Set up color chooser for setting text color
        
        textcolor = new JColorChooser(banner.getForeground());
        textcolor.getSelectionModel().addChangeListener(this);
        textcolor.setBorder(BorderFactory.createTitledBorder(
                                             "Choose Text Color"));
        textcolor.setPreferredSize(new Dimension(500,500));
        textcolor.setPreviewPanel(new JPanel());
        
        //Set up color chooser for setting background color
        
        bgcolor = new JColorChooser(banner.getForeground());
        bgcolor.getSelectionModel().addChangeListener(this);
        bgcolor.setBorder(BorderFactory.createTitledBorder(
                                             "Choose Background Color"));

        bgcolor.setPreviewPanel(new JPanel());
        
        //Set up the drop down menus for fontfamily
        
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String[] names = ge.getAvailableFontFamilyNames();
        
        fontfamily = new JComboBox(names);
        fontfamily.setBorder(BorderFactory.createTitledBorder(
                "Change Font Family"));
        fontfamily.addActionListener(this);
        fontfamily.setRenderer(new FontCellRenderer());
        fontfamily.setFont(new Font("Abadi MT Condensed Extra Bold", Font.PLAIN, 16));    
        
        //add the elements
        
        add(bannerPanel, BorderLayout.PAGE_START);
        add(textcolor, BorderLayout.LINE_START);
        add(bgcolor,BorderLayout.CENTER);
        add(fontfamily,BorderLayout.LINE_END);
        
    }
    
    	//Change foreground and background color
    
    public void stateChanged(ChangeEvent e) {
        Color textnewColor = textcolor.getColor();
        Color bgnewColor = bgcolor.getColor();
        banner.setForeground(textnewColor);
        banner.setBackground(bgnewColor);
    }
    
    	//Change fontfamily
    
    public void actionPerformed(ActionEvent e) {
        JComboBox cb = (JComboBox)e.getSource();
        String fontname = (String)cb.getSelectedItem();
        banner.setFont(new Font(fontname, Font.BOLD, 24));
        fontfamily.setFont(new Font(fontname, Font.PLAIN, 16)); 
    }
    
    	//Display font on the drop down list
    
    class FontCellRenderer extends DefaultListCellRenderer {

        public Component getListCellRendererComponent(
            JList list,
            Object value,
            int index,
            boolean isSelected,
            boolean cellHasFocus) {
            JLabel label = (JLabel)super.getListCellRendererComponent(
                list,value,index,isSelected,cellHasFocus);
            Font font = new Font((String)value, Font.PLAIN, 20);
            label.setFont(font);
            return label;
        }
    }
    
    protected void updateLabel(String name) {
        
    }
    
    /**
     * Create the GUI and show it.  For thread safety,
     * this method should be invoked from the
     * event-dispatching thread.
     */
    private static void createAndShowGUI() {
        //Create and set up the window.
        JFrame frame = new JFrame("ColorChooserDemo");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 
        //Create and set up the content pane.
        JComponent newContentPane = new ColorChooserDemo();
        newContentPane.setOpaque(true); //content panes must be opaque
        frame.setContentPane(newContentPane);
 
        //Display the window.
        frame.pack();
        frame.setVisible(true);
    }
 
    public static void main(String[] args) {
        //Schedule a job for the event-dispatching thread:
        //creating and showing this application's GUI.
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                createAndShowGUI();
            }
        });
    }
}
